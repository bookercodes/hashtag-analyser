{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["convertKeysToCamelcase","require","_","App","useState","allSubmissions","setAllSubmissions","today","Date","start","getDate","end","className","onDrop","doc","submissions","map","record","data","submission","tweetPostedTime","filter","tweetType","tweetContent","includes","config","header","addRemoveButton","type","value","disabled","onClick","todaysContestants","winner","sample","console","log","username","tweetUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAGMA,EAAyBC,EAAQ,IACjCC,EAAID,EAAQ,IAgDHE,EA9CH,WAAO,IAAD,EAC4BC,mBAAS,MADrC,mBACTC,EADS,KACOC,EADP,KAEVC,EAAQ,IAAIC,KACZC,EAAQ,IAAID,KAAK,KAAM,GAAID,EAAMG,UAAY,EAAG,GAChDC,EAAM,IAAIH,KAAK,KAAM,GAAID,EAAMG,UAAW,IA4BhD,OACE,sBAAKE,UAAU,MAAf,UACE,cAAC,IAAD,CACEC,OAlBe,SAAAC,GACnB,IAAMC,EAAcD,EACjBE,KAAI,SAAAC,GAAM,OAAIA,EAAOC,QACrBF,KAAI,SAAAG,GAAU,OAAInB,EAAuBmB,MACzCH,KAAI,SAAAG,GACH,OAAO,2BACFA,GADL,IAEEC,gBAAiB,IAAIZ,KAAKW,EAAWC,sBAGxCC,QAAO,SAAAF,GAAU,MAA6B,YAAzBA,EAAWG,aAChCD,QAAO,SAAAF,GAAU,OAAIA,EAAWI,cAAgBJ,EAAWI,aAAaC,SAAS,eAClFlB,EAAkBS,IAOhBU,OAAQ,CAAEC,QAAQ,GAClBC,iBAAe,EAHjB,SAKE,8FAEF,uBAAOC,KAAK,SAASC,MAAK,2CAAsCpB,EAAtC,gBAAmDE,GAAOmB,UAAWzB,EAAgB0B,QAnC1F,WACvB,IAAMC,EAAoB3B,EAAegB,QAAO,SAAAF,GAAU,OAAIA,EAAWC,iBAAmBX,GAASU,EAAWC,iBAAmBT,KAC7HsB,EAAS/B,EAAEgC,OAAOF,GAExBG,QAAQC,IAAI,UACZD,QAAQC,IAAI,uBACZD,QAAQC,IAAR,+BAAoCH,EAAOI,SAA3C,uBAAkEJ,EAAOb,kBACzEe,QAAQC,IAAIH,EAAOV,cACnBY,QAAQC,IAAIH,EAAOK,iBCRRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ade09e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { CSVReader } from 'react-papaparse'\nconst convertKeysToCamelcase = require(\"camelcase-keys\");\nconst _ = require(\"underscore\")\n\nconst App = () => {\n  const [allSubmissions, setAllSubmissions] = useState(null);\n  const today = new Date()\n  const start = new Date(2020, 11, today.getDate() - 1, 6)\n  const end = new Date(2020, 11, today.getDate(), 15)\n\n  const pickTodaysWinner = () => {\n    const todaysContestants = allSubmissions.filter(submission => submission.tweetPostedTime >= start && submission.tweetPostedTime <= end)\n    const winner = _.sample(todaysContestants)\n\n    console.log('------')\n    console.log('WINNER ðŸŽ‰')\n    console.log(`https://twitter.com/@${winner.username} Tweeted at ${winner.tweetPostedTime}`)\n    console.log(winner.tweetContent)\n    console.log(winner.tweetUrl)\n  }\n\n  const handleOnDrop = doc => {\n    const submissions = doc\n      .map(record => record.data)\n      .map(submission => convertKeysToCamelcase(submission))\n      .map(submission => {\n        return {\n          ...submission,\n          tweetPostedTime: new Date(submission.tweetPostedTime)\n        }\n      })\n      .filter(submission => submission.tweetType !== \"ReTweet\")\n      .filter(submission => submission.tweetContent && submission.tweetContent.includes(\"https://\"))\n      setAllSubmissions(submissions)\n  }\n\n  return (\n    <div className=\"App\">\n      <CSVReader\n        onDrop={handleOnDrop}\n        config={{ header: true }}\n        addRemoveButton\n      >\n        <span>Export data.csv from trackmyhashtag.com and drag it here</span>\n      </CSVReader>\n      <input type=\"button\" value={`Pick a random submission between ${start} and ${end}`} disabled={!allSubmissions} onClick={pickTodaysWinner}/>\n    </div>)\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}